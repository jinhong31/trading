{"version":3,"sources":["views/pages/authentication/ForgotPasswordV1.js","../node_modules/react-feather/dist/icons/chevron-left.js"],"names":["ForgotPasswordV1","className","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","tag","onSubmit","for","type","placeholder","autoFocus","Ripple","color","block","size","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronLeft","forwardRef","_ref","ref","_ref$color","_ref$size","rest","React","createElement","xmlns","width","strokeLinecap","strokeLinejoin","propTypes","PropTypes","string","oneOfType","number","displayName"],"mappings":"qJAAA,sIA4FeA,UAvFU,WACvB,OACE,qBAAKC,UAAU,4BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,IAAD,CAAMA,UAAU,OAAhB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAMA,UAAU,aAAaC,GAAG,IAAIC,QAAS,SAAAC,GAAC,OAAIA,EAAEC,kBAApD,UACE,sBAAKC,QAAQ,aAAaC,QAAQ,MAAMC,OAAO,KAA/C,UACE,iCACE,iCAAgBC,GAAG,OAAOC,GAAG,cAAcC,GAAG,MAAMC,GAAG,cAAcC,GAAG,mBAAxE,UACE,sBAAMC,UAAU,UAAUC,OAAO,OACjC,sBAAMD,UAAU,UAAUC,OAAO,YAEnC,iCAAgBN,GAAG,cAAcC,GAAG,cAAcC,GAAG,aAAaC,GAAG,OAAOC,GAAG,mBAA/E,UACE,sBAAMC,UAAU,UAAUE,YAAY,IAAID,OAAO,OACjD,sBAAMD,UAAU,UAAUC,OAAO,eAGrC,mBAAGF,GAAG,SAASI,OAAO,OAAOC,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAlE,SACE,mBAAGP,GAAG,WAAWQ,UAAU,sCAA3B,SACE,oBAAGR,GAAG,QAAQQ,UAAU,oCAAxB,UACE,sBACEC,EAAE,weACFT,GAAG,OACHZ,UAAU,eACVsB,MAAO,CAAEJ,KAAM,kBAEjB,sBACEG,EAAE,kTACFT,GAAG,OACHM,KAAK,yBACLK,QAAQ,QAEV,yBACEX,GAAG,SACHM,KAAK,UACLK,QAAQ,cACRC,OAAO,sEAET,yBACEZ,GAAG,SACHM,KAAK,UACLK,QAAQ,cACRC,OAAO,sEAET,yBACEZ,GAAG,SACHM,KAAK,yBACLK,QAAQ,cACRC,OAAO,uEAMjB,oBAAIxB,UAAU,+BAAd,sBAEF,cAAC,IAAD,CAAWyB,IAAI,KAAKzB,UAAU,OAA9B,2CAGA,cAAC,IAAD,CAAUA,UAAU,OAApB,qFAGA,eAAC,IAAD,CAAMA,UAAU,iCAAiC0B,SAAU,SAAAvB,GAAC,OAAIA,EAAEC,kBAAlE,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,UAAU,aAAa2B,IAAI,cAAlC,mBAGA,cAAC,IAAD,CAAOC,KAAK,QAAQhB,GAAG,cAAciB,YAAY,mBAAmBC,WAAS,OAE/E,cAAC,IAAOC,OAAR,CAAeC,MAAM,UAAUC,OAAK,EAApC,gCAIF,mBAAGjC,UAAU,mBAAb,SACE,eAAC,IAAD,CAAMC,GAAG,kBAAT,UACE,cAAC,IAAD,CAAaD,UAAU,QAAQkC,KAAM,KACrC,sBAAMlC,UAAU,eAAhB,2C,iCClFhB,6CAASmC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkBH,EAASY,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAIoB,EAAcC,sBAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAaF,EAAK5B,MAClBA,OAAuB,IAAf8B,EAAwB,eAAiBA,EACjDC,EAAYH,EAAK1B,KACjBA,OAAqB,IAAd6B,EAAuB,GAAKA,EACnCC,EAAOf,EAAyBW,EAAM,CAAC,QAAS,SAEpD,OAAoBK,IAAMC,cAAc,MAAO/B,EAAS,CACtD0B,IAAKA,EACLM,MAAO,6BACPC,MAAOlC,EACP3B,OAAQ2B,EACR7B,QAAS,YACTa,KAAM,OACNF,OAAQgB,EACRf,YAAa,IACboD,cAAe,QACfC,eAAgB,SACfN,GAAoBC,IAAMC,cAAc,WAAY,CACrD1C,OAAQ,wBAGZkC,EAAYa,UAAY,CACtBvC,MAAOwC,IAAUC,OACjBvC,KAAMsC,IAAUE,UAAU,CAACF,IAAUC,OAAQD,IAAUG,UAEzDjB,EAAYkB,YAAc,cACXlB","file":"static/js/170.1c99aa97.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\nimport { ChevronLeft } from 'react-feather'\nimport { Card, CardBody, CardTitle, CardText, Form, FormGroup, Label, Input, Button } from 'reactstrap'\nimport '@styles/base/pages/page-auth.scss'\n\nconst ForgotPasswordV1 = () => {\n  return (\n    <div className='auth-wrapper auth-v1 px-2'>\n      <div className='auth-inner py-2'>\n        <Card className='mb-0'>\n          <CardBody>\n            <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n              <svg viewBox='0 0 139 95' version='1.1' height='28'>\n                <defs>\n                  <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                    <stop stopColor='#000000' offset='0%'></stop>\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\n                  </linearGradient>\n                  <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                    <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\n                  </linearGradient>\n                </defs>\n                <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n                  <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                    <g id='Group' transform='translate(400.000000, 178.000000)'>\n                      <path\n                        d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                        id='Path'\n                        className='text-primary'\n                        style={{ fill: 'currentColor' }}\n                      ></path>\n                      <path\n                        d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                        id='Path'\n                        fill='url(#linearGradient-1)'\n                        opacity='0.2'\n                      ></path>\n                      <polygon\n                        id='Path-2'\n                        fill='#000000'\n                        opacity='0.049999997'\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                      ></polygon>\n                      <polygon\n                        id='Path-2'\n                        fill='#000000'\n                        opacity='0.099999994'\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                      ></polygon>\n                      <polygon\n                        id='Path-3'\n                        fill='url(#linearGradient-2)'\n                        opacity='0.099999994'\n                        points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                      ></polygon>\n                    </g>\n                  </g>\n                </g>\n              </svg>\n              <h2 className='brand-text text-primary ml-1'>Vuexy</h2>\n            </Link>\n            <CardTitle tag='h4' className='mb-1'>\n              Forgot Password? ðŸ”’\n            </CardTitle>\n            <CardText className='mb-2'>\n              Enter your email and we'll send you instructions to reset your password\n            </CardText>\n            <Form className='auth-forgot-password-form mt-2' onSubmit={e => e.preventDefault()}>\n              <FormGroup>\n                <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n                <Input type='email' id='login-email' placeholder='john@example.com' autoFocus />\n              </FormGroup>\n              <Button.Ripple color='primary' block>\n                Send reset link\n              </Button.Ripple>\n            </Form>\n            <p className='text-center mt-2'>\n              <Link to='/pages/login-v1'>\n                <ChevronLeft className='mr-25' size={14} />\n                <span className='align-middle'>Back to login</span>\n              </Link>\n            </p>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default ForgotPasswordV1\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronLeft = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"15 18 9 12 15 6\"\n  }));\n});\nChevronLeft.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronLeft.displayName = 'ChevronLeft';\nexport default ChevronLeft;"],"sourceRoot":""}