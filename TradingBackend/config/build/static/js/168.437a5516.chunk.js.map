{"version":3,"sources":["views/extensions/ratings/RatingBasic.js","views/extensions/ratings/RatingSizes.js","views/extensions/ratings/RatingsHover.js","views/extensions/ratings/RatingEvents.js","views/extensions/ratings/RatingNumbers.js","views/extensions/ratings/RatingReadOnly.js","views/extensions/ratings/RatingCustomSvg.js","views/extensions/ratings/RatingFractional.js","views/extensions/ratings/RatingControlled.js","views/extensions/ratings/index.js","@core/components/extensions-header/index.js"],"names":["RatingBasic","filledColor","dir","Card","CardHeader","CardTitle","tag","CardBody","emptySymbol","size","fill","stroke","fullSymbol","initialRating","direction","RatingSizes","className","RatingsHover","useState","value","setValue","id","onHover","rate","undefined","onChange","RatingEvents","Row","Col","md","CardText","alert","RatingNumbers","props","map","n","RatingReadOnly","readonly","RatingCustomSvg","emptyColor","stop","RatingFractional","fractions","RatingControlled","e","Button","color","onClick","outline","Rating","useRTL","isRtl","themeColors","useContext","ThemeColors","title","subTitle","link","lg","xs","colors","warning","main","ExtensionsHeader","sm","href","target","rel"],"mappings":"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","file":"static/js/168.437a5516.chunk.js","sourcesContent":["import Rating from 'react-rating'\nimport { Star } from 'react-feather'\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\n\nconst RatingBasic = ({ filledColor, dir }) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Rating\n          emptySymbol={<Star size={32} fill='#babfc7' stroke='#babfc7' />}\n          fullSymbol={<Star size={32} fill={filledColor} stroke={filledColor} />}\n          initialRating={2}\n          direction={dir}\n        />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RatingBasic\n","import Rating from 'react-rating'\nimport { Star } from 'react-feather'\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\n\nconst RatingSizes = ({ filledColor, dir }) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Sizes</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <h6>Large</h6>\n        <Rating\n          direction={dir}\n          emptySymbol={<Star size={42} fill='#babfc7' stroke='#babfc7' />}\n          fullSymbol={<Star size={42} fill={filledColor} stroke={filledColor} />}\n        />\n        <h6 className='mt-2'>Default</h6>\n        <Rating\n          direction={dir}\n          emptySymbol={<Star size={32} fill='#babfc7' stroke='#babfc7' />}\n          fullSymbol={<Star size={32} fill={filledColor} stroke={filledColor} />}\n        />\n        <h6 className='mt-2'>Small</h6>\n        <Rating\n          direction={dir}\n          emptySymbol={<Star size={20} fill='#babfc7' stroke='#babfc7' />}\n          fullSymbol={<Star size={20} fill={filledColor} stroke={filledColor} />}\n        />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RatingSizes\n","import { useState, Fragment } from 'react'\nimport Rating from 'react-rating'\nimport { Star } from 'react-feather'\n\nconst RatingsHover = ({ filledColor, dir }) => {\n  const [value, setValue] = useState(0)\n\n  const onHover = rate => {\n    if (rate !== undefined) {\n      setValue(rate)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Rating\n        initialRating={value}\n        id='ratings-hover'\n        emptySymbol={<Star size={32} fill='#babfc7' stroke='#babfc7' />}\n        fullSymbol={<Star size={32} fill={filledColor} stroke={filledColor} />}\n        onHover={rate => onHover(rate)}\n        onChange={rate => setValue(rate)}\n        direction={dir}\n      />\n      <div className='counter-wrapper mt-1'>\n        <span className='font-weight-bold'>Ratings: {value}</span>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default RatingsHover\n","import Rating from 'react-rating'\nimport { Star } from 'react-feather'\nimport RatingsHover from './RatingsHover'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\n\nconst RatingEvents = ({ filledColor, dir }) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Events</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col md='6' className='d-flex flex-column align-items-start mb-md-0 mb-1'>\n            <CardText className='font-weight-semibold mb-25'>On Change</CardText>\n            <Rating\n              emptySymbol={<Star size={32} fill='#babfc7' stroke='#babfc7' />}\n              fullSymbol={<Star size={32} fill={filledColor} stroke={filledColor} />}\n              onChange={rate => alert(rate)}\n              direction={dir}\n            />\n          </Col>\n          <Col md='6' className='d-flex flex-column align-items-start'>\n            <CardText className='font-weight-semibold mb-25'>On Hover</CardText>\n            <RatingsHover filledColor={filledColor} dir={dir} />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RatingEvents\n","import { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\nimport Rating from 'react-rating'\n\nconst RatingNumbers = props => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Numbers</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Rating\n          emptySymbol={<span className='font-medium-3 mr-50'>-</span>}\n          fullSymbol={[1, 2, 3, 4, 5].map(n => (\n            <span className='font-medium-3 mr-50'>{n}</span>\n          ))}\n          direction={props.dir}\n        />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RatingNumbers\n","import Rating from 'react-rating'\nimport { Star } from 'react-feather'\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\n\nconst RatingReadOnly = ({ filledColor, dir }) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Readonly</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Rating\n          emptySymbol={<Star size={32} fill='#babfc7' stroke='#babfc7' />}\n          fullSymbol={<Star size={32} fill={filledColor} stroke={filledColor} />}\n          readonly\n          initialRating={2}\n          direction={dir}\n        />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RatingReadOnly\n","import Rating from 'react-rating'\nimport { Sun, Cloud, CloudLightning, CloudSnow, CloudDrizzle } from 'react-feather'\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\n\nconst RatingCustomSvg = ({ emptyColor, dir }) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Custom SVG</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Rating\n          emptySymbol={<Sun size={32} stroke='#babfc7' />}\n          fullSymbol={[\n            <Cloud size={32} stroke='#babfc7' />,\n            <CloudLightning size={32} stroke='#babfc7' />,\n            <CloudSnow size={32} stroke='#babfc7' />,\n            <CloudDrizzle size={32} stroke='#babfc7' />\n          ]}\n          stop={4}\n          direction={dir}\n        />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RatingCustomSvg\n","import Rating from 'react-rating'\nimport { Star } from 'react-feather'\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\n\nconst RatingFractional = ({ filledColor, dir }) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Fractional</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Rating\n          emptySymbol={<Star size={32} fill='#babfc7' stroke='#babfc7' />}\n          fullSymbol={<Star size={32} fill={filledColor} stroke={filledColor} />}\n          fractions={2}\n          initialRating={2.5}\n          direction={dir}\n        />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RatingFractional\n","import { useState } from 'react'\nimport Rating from 'react-rating'\nimport { Star } from 'react-feather'\nimport { Card, Button, CardHeader, CardTitle, CardBody } from 'reactstrap'\n\nconst RatingControlled = ({ filledColor, dir }) => {\n  const [value, setValue] = useState(0)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Controlled Ratings</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Rating\n          emptySymbol={<Star size={32} fill='#babfc7' stroke='#babfc7' />}\n          fullSymbol={<Star size={32} fill={filledColor} stroke={filledColor} />}\n          initialRating={value}\n          onChange={e => setValue(e)}\n          direction={dir}\n        />\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={() => setValue(0)} outline>\n            Reset\n          </Button>\n          <Button color='primary' onClick={() => alert(value)} outline>\n            Get Ratings\n          </Button>\n          <Button color='primary' onClick={() => setValue(3)} outline>\n            Set Ratings to 3\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RatingControlled\n","import { Fragment, useContext } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { useRTL } from '@hooks/useRTL'\nimport RatingBasic from './RatingBasic'\nimport RatingSizes from './RatingSizes'\nimport RatingEvents from './RatingEvents'\nimport RatingNumbers from './RatingNumbers'\nimport RatingReadOnly from './RatingReadOnly'\nimport RatingCustomSvg from './RatingCustomSvg'\nimport RatingFractional from './RatingFractional'\nimport RatingControlled from './RatingControlled'\nimport ExtensionsHeader from '@components/extensions-header'\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\nconst Rating = () => {\n  const [isRtl, setIsRtl] = useRTL()\n  const themeColors = useContext(ThemeColors)\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Rating'\n        subTitle='A rating react component with custom symbols'\n        link='https://github.com/dreyescat/react-rating'\n      />\n      <Row className='match-height'>\n        <Col lg={6} xs={12}>\n          <RatingBasic dir={isRtl ? 'rtl' : 'ltr'} filledColor={themeColors.colors.warning.main} />\n        </Col>\n        <Col lg={6} xs={12}>\n          <RatingReadOnly dir={isRtl ? 'rtl' : 'ltr'} filledColor={themeColors.colors.warning.main} />\n        </Col>\n        <Col lg={6} xs={12}>\n          <RatingFractional dir={isRtl ? 'rtl' : 'ltr'} filledColor={themeColors.colors.warning.main} />\n        </Col>\n        <Col lg={6} xs={12}>\n          <RatingCustomSvg dir={isRtl ? 'rtl' : 'ltr'} filledColor={themeColors.colors.warning.main} />\n        </Col>\n        <Col lg={6} xs={12}>\n          <RatingNumbers dir={isRtl ? 'rtl' : 'ltr'} filledColor={themeColors.colors.warning.main} />\n        </Col>\n        <Col lg={6} xs={12}>\n          <RatingEvents dir={isRtl ? 'rtl' : 'ltr'} filledColor={themeColors.colors.warning.main} />\n        </Col>\n        <Col lg={6} xs={12}>\n          <RatingControlled dir={isRtl ? 'rtl' : 'ltr'} filledColor={themeColors.colors.warning.main} />\n        </Col>\n        <Col lg={6} xs={12}>\n          <RatingSizes dir={isRtl ? 'rtl' : 'ltr'} filledColor={themeColors.colors.warning.main} />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Rating\n","// ** React Imports\nimport Proptypes from 'prop-types'\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ml-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired,\n  link: Proptypes.string\n}\n"],"sourceRoot":""}